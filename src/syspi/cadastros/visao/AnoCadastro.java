package syspi.cadastros.visao;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import syspi.cadastros.controle.AnoCadastroDAO;
import syspi.modelo.Ano;

public class AnoCadastro extends javax.swing.JDialog {

    public AnoCadastro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        deixarBotaoDefaultEComoPadraoEmFocu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTFAno = new javax.swing.JTextField();
        jBSalvar = new javax.swing.JButton();
        jBVoltar = new javax.swing.JButton();
        jBProximo = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jBPrimeiroRegistro = new javax.swing.JButton();
        jBUltimoRegistro = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Ano");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setText("Ano");

        jTFAno.setEditable(false);
        jTFAno.setText("jTFAno");
        jTFAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFAnoActionPerformed(evt);
            }
        });
        jTFAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFAnoKeyPressed(evt);
            }
        });

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/salvar.png"))); // NOI18N
        jBSalvar.setEnabled(false);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/voltar.png"))); // NOI18N
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        jBProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/proximo.png"))); // NOI18N
        jBProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProximoActionPerformed(evt);
            }
        });

        jBNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/Novo_add.png"))); // NOI18N
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jBPrimeiroRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/primeiroRegistro.png"))); // NOI18N
        jBPrimeiroRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPrimeiroRegistroActionPerformed(evt);
            }
        });

        jBUltimoRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/syspi/imagens/ultimoRegistro.png"))); // NOI18N
        jBUltimoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUltimoRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel2))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jBSalvar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBPrimeiroRegistro)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBVoltar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBProximo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBUltimoRegistro)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBNovo))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTFAno)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBVoltar)
                    .addComponent(jBProximo)
                    .addComponent(jBNovo)
                    .addComponent(jBPrimeiroRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBSalvar)
                        .addComponent(jBUltimoRegistro)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        botaoSalvar();
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        botaoNovo();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProximoActionPerformed
        botaoAvancar();
    }//GEN-LAST:event_jBProximoActionPerformed

    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
        botaoVoltar();
    }//GEN-LAST:event_jBVoltarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        carregarDados();
    }//GEN-LAST:event_formWindowOpened

    private void jBUltimoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUltimoRegistroActionPerformed
        botaoUltimoRegistro();
    }//GEN-LAST:event_jBUltimoRegistroActionPerformed

    private void jBPrimeiroRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPrimeiroRegistroActionPerformed
        botaoPrimeiroRegistro();
    }//GEN-LAST:event_jBPrimeiroRegistroActionPerformed

    private void jTFAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFAnoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        fecharJanelaPeloBotaoX();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fecharJanelas();
    }//GEN-LAST:event_formWindowClosing

    private void jTFAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFAnoKeyPressed
        teclaEnterAcao(evt);
    }//GEN-LAST:event_jTFAnoKeyPressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
   /*
         If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnoCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnoCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnoCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnoCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AnoCadastro dialog = new AnoCadastro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBPrimeiroRegistro;
    private javax.swing.JButton jBProximo;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jBUltimoRegistro;
    private javax.swing.JButton jBVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTFAno;
    // End of variables declaration//GEN-END:variables

    /*   PARTE PROGRAMADA POR JORGE    */
    /*   Este objeto é responável pela manipualção dos dados no sitema para o banco de dados e vice-versa   */
    AnoCadastroDAO controle = new AnoCadastroDAO();

    /*        esta lista será usada para trazer os dados do banco de dados, da tabela ANO 
     e a partir dela fazer as navageções e outros.        */
    List<Ano> lista_Ano = new ArrayList<>();

    int rolagem_posicao = 0; //serve para saber/indicar a posição do/no registro da lista
    int tamanho_lista = 0; //serve para informar o tamanho da lista lista-Ano, deve ser iniciado com ZERO

    /*    O botao salvar deve sempre colocar no primeiro registro da tabela
     verificar se o  campo contem apenas numeros, e somente salvar se estiver com numeros.      */
    /*       >>>>ESTE METODO DEVE ANTES DE SALVAR VERIFICAR SE JA EXISTE O ANO CADASTRO, SE SIM
     ELE DEVE INFORMAR AO USUARIO.     */
    private void botaoSalvar() {
        if (verificarTipoCampoNumero()) {
            if (verificarTamanhoCampoAno()) {
                if (!verificarSeAnoJaCadastrado()) {
                    campoAnoNaoEditavel();
                    botaoSalvarDestivado();
                    botaoNovoAtivado();
                    botaoAvancarAtivado();
                    botaoUltimoRegistroAtivado();
                    botaoVoltarDesativado();
                    botaoPrimeiroRegistroDesativado();

                    Ano ano = new Ano();
                    int anoTempo = Integer.parseInt(jTFAno.getText().trim());
                    ano.setAno(anoTempo);

                    controle.salvar(ano);
                    pegarDadosTabelaEColocarNaLista();
                    informarTamanhoLista();
                    colocarRolagemPosicaoInicial();
                } else {
                    JOptionPane.showMessageDialog(null, "Ano " + jTFAno.getText() + " já está cadastrado.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ano " + jTFAno.getText() + " invalido!");
            }

        }

    }

    private void botaoNovo() {
        jTFAno.setText("");
        jTFAno.setEditable(true);
        jBSalvar.setEnabled(true);
        jBNovo.setEnabled(false);
        jBProximo.setEnabled(false);
        jBVoltar.setEnabled(false);
        botaoPrimeiroRegistroDesativado();
        botaoUltimoRegistroDesativado();
    }

    private void botaoAvancar() {
        if (rolagem_posicao < tamanho_lista - 1) {
            if (!jBVoltar.isEnabled() || !jBPrimeiroRegistro.isEnabled()) {
                botaoVoltarAtivado();
                botaoPrimeiroRegistroAtivado();
            }
            rolagem_posicao++;

            Ano ano = lista_Ano.get(rolagem_posicao);
            jTFAno.setText(String.valueOf(ano.getAno()));
        } else {
            botaoAvancarDesativado();
            botaoVoltarAtivado();
            botaoPrimeiroRegistroAtivado();
            botaoUltimoRegistroDesativado();
        }
    }

    private void botaoVoltar() {
        if (rolagem_posicao > 0) {
            if (!jBProximo.isEnabled() || !jBUltimoRegistro.isEnabled()) {
                botaoAvancarAtivado();
                botaoUltimoRegistroAtivado();
            }
            rolagem_posicao--;
            Ano ano = lista_Ano.get(rolagem_posicao);
            jTFAno.setText(String.valueOf(ano.getAno()));
        } else {
            botaoVoltarDesativado();
            botaoPrimeiroRegistroDesativado();
            botaoAvancarAtivado();
            botaoUltimoRegistroAtivado();
        }

    }

    /*
     ESTE METODO DEVE INICIALIAR/CARREGAR OS DADOS DA TABELA ANO,
     E CASO ESTEJA VAZIA, ESTE DEVE TRATAR ISSO.
     DEVE TAMBÉM INFORMAR O TAMANHADO/QUANTIDADE DE REGISTROS DA TABELA ANO.
     DEVE SER COLOCADO NO EVENTO ABRIR JANELA(openWindows).
     */
    private void carregarDados() {
        botaoVoltarDesativado();
        botaoPrimeiroRegistroDesativado();
        try {
            pegarDadosTabelaEColocarNaLista();
            informarTamanhoLista();
            colocarRolagemPosicaoInicial();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ainda não há dados Cadastrados");
            jTFAno.setText("");  //limpa o campo ANO da janela, caso a tabela ANO esteja vazia 

        }
    }

    private void botaoPrimeiroRegistro() {
        colocarRolagemPosicaoInicial();
        botaoPrimeiroRegistroDesativado();
        botaoVoltarDesativado();
        botaoAvancarAtivado();
        botaoUltimoRegistroAtivado();
    }

    private void botaoUltimoRegistro() {
        colocarRolagemPosicaoFinal();
        botaoUltimoRegistroDesativado();
        botaoAvancarDesativado();
        botaoPrimeiroRegistroAtivado();
        botaoVoltarAtivado();
    }
    /*Este metodo he para quando o usuario fechar a janela, neste caso somente pelo barra de titulo
     ele nao tem o this.dispose(); dentro do if, porque a janela vai fechar de qualquer forma 
     */

    private void fecharJanelas() {
        if (jBSalvar.isEnabled()) {
            int op_escolha = JOptionPane.showConfirmDialog(null, "Deseja sair sem Salvar os dados?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (op_escolha == JOptionPane.YES_NO_OPTION) {
                colocarRolagemPosicaoInicial();
                campoAnoNaoEditavel();
                botaoSalvarDestivado();
                botaoPrimeiroRegistroDesativado();
                botaoVoltarDesativado();
                botaoAvancarAtivado();
                botaoUltimoRegistroAtivado();
                botaoNovoAtivado();
            }
        } else {
            this.dispose();
        }
    }

    /*
     Este metodo serve para quando o usuario clicar no botao fechar da barra de titulo,
     entao este metodo veririca se o botao salvar esta ativo, se sim ele abri a janela para o usurio
     */
    private void fecharJanelaPeloBotaoX() {
        if (jBSalvar.isEnabled()) {
            this.setVisible(true);
        }
    }

    // Este metodo serve para pegar os dados na tabela ano e atualizar a lista
    private void pegarDadosTabelaEColocarNaLista() {
        lista_Ano = controle.listarTudo(); //carrega todos os dados da tabela ANO na lista lista_ano
    }

    //Este metodo serve para pegar o tamanho da lista e informar na variavel tamanho_lista
    private void informarTamanhoLista() {
        tamanho_lista = lista_Ano.size(); // informa o tamanho da lista, depois de preenchida, na variavel
    }

    //pegar a posição final da lista e informa na variacel rolagem_posica e setar o ultimo registro no formulario
    private void colocarRolagemPosicaoFinal() {
        rolagem_posicao = lista_Ano.size() - 1; //informar a posição final da lista
        jTFAno.setText(String.valueOf(lista_Ano.get(rolagem_posicao).getAno())); //setar o valor do último regsitro da lista
    }

    //pegar a posicao inical da lista, sempre ZERO, e setar o primeiro registro no formulario
    private void colocarRolagemPosicaoInicial() {
        rolagem_posicao = 0;
        jTFAno.setText(String.valueOf(lista_Ano.get(rolagem_posicao).getAno())); //setar o valor do primeiro regsitro da lista
    }

    /*Este medoto fica no evento ao perder o Focu, ele estao ver se tem somente numeros, caso 
     contrario ele pede para novamente.
     */
    private boolean verificarTipoCampoNumero() {
        try {
            int ano_verificao = Integer.parseInt(jTFAno.getText().trim());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Este campo só aceita numeros.\nO Campo Ano, é de preenchimento obrigátorio.!");
            jTFAno.requestFocus();
            return false;
        }
    }

    /*
     Este metodo deve verificar se um ano novo ja esta cadastro no banco de dados
     E deve tambem verificar se o campo esta vario
     */
    private boolean verificarSeAnoJaCadastrado() {
        int ano_campo = Integer.parseInt(jTFAno.getText().trim());
        for (int i = 0; i < lista_Ano.size(); i++) {
            if (lista_Ano.get(i).getAno() == ano_campo) {
                return true;
            }
        }
        return false;
    }

    /*Este metodo serve para pegar a tecla enter, quando pressionada e salvar os dados
     sem precisa clicar no botao Salvar
     */
    private void teclaEnterAcao(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER & jTFAno.isEditable()) {
            botaoSalvar();
        }
    }

    /*  Este metodo serve para quando o usuario pessionar a tecla ESC
     a janela seja fechada.   */
    private void teclaESCFechar(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }
    /*  Este metodo he para verificar o tamanho do campo ano que deve ter 4 digitos,
     e não pode aceitar anos negativoss.   */
    private boolean verificarTamanhoCampoAno() {
        if (jTFAno.getText().length() == 4 & Integer.parseInt(jTFAno.getText()) > 0) {
            return true;
        } else {
            return false;
        }
    }

    private void teclaDireita(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT & !jTFAno.isEditable()) {
            botaoAvancar();
        }
    }

    /*Este metodo serve para deicar o botao salar como padrao, para poder usar o ENTER,
     ele deve fica dentro do metodo contrutor.
     */
    private void deixarBotaoDefaultEComoPadraoEmFocu() {
        getRootPane().setDefaultButton(jBSalvar); // definindo o botao salvar como padrao
        //esta opcao abaixo deixa o focu no botao defaull, pode-se colocar na classe principal pois muda tudop
        UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);
    }

    /*
     os metodos abaixos são somente para deixar a logica mais facil.
     os estados dos botoes, ativado e/ou desativado
     */
    private void botaoAvancarAtivado() {
        jBProximo.setEnabled(true);
    }

    private void botaoAvancarDesativado() {
        jBProximo.setEnabled(false);
    }

    private void botaoVoltarAtivado() {
        jBVoltar.setEnabled(true);
    }

    private void botaoVoltarDesativado() {
        jBVoltar.setEnabled(false);
    }

    private void botaoPrimeiroRegistroAtivado() {
        jBPrimeiroRegistro.setEnabled(true);
    }

    private void botaoPrimeiroRegistroDesativado() {
        jBPrimeiroRegistro.setEnabled(false);
    }

    private void botaoUltimoRegistroAtivado() {
        jBUltimoRegistro.setEnabled(true);
    }

    private void botaoUltimoRegistroDesativado() {
        jBUltimoRegistro.setEnabled(false);
    }

    private void botaoSalvarAtivado() {
        jBSalvar.setEnabled(true);
    }

    private void botaoSalvarDestivado() {
        jBSalvar.setEnabled(false);
    }

    private void botaoNovoAtivado() {
        jBNovo.setEnabled(true);
    }

    private void botaoNovoDestivado() {
        jBNovo.setEnabled(false);
    }

    private void campoAnoEditavel() {
        jTFAno.setEditable(true);
    }

    private void campoAnoNaoEditavel() {
        jTFAno.setEditable(false);
    }

}
